// "use server";

import axios from "axios";

import ccxt, {
  alpaca,
  apex,
  ascendex,
  bigone,
  binance,
  bingx,
  bit2c,
  bitbank,
  bitbns,
  bitfinex,
  bitflyer,
  bitget,
  bithumb,
  bitmart,
  bitmex,
  bitopro,
  bitrue,
  bitso,
  bitstamp,
  bitteam,
  bitvavo,
  bl3p,
  blockchaincom,
  blofin,
  btcalpha,
  btcbox,
  btcmarkets,
  btcturk,
  bybit,
  cex,
  coinbase,
  coinbaseexchange,
  coinbaseinternational,
  coincatch,
  coincheck,
  coinex,
  coinlist,
  coinmate,
  coinmetro,
  coinone,
  coinsph,
  coinspot,
  cryptocom,
  cryptomus,
  defx,
  delta,
  deribit,
  derive,
  digifinex,
  ellipx,
  exmo,
  gate,
  gemini,
  hashkey,
  hitbtc,
  hollaex,
  htx,
  huobijp,
  hyperliquid,
  idex,
  independentreserve,
  indodax,
  kraken,
  krakenfutures,
  kucoin,
  kucoinfutures,
  kuna,
  latoken,
  lbank,
  luno,
  mercado,
  mexc,
  ndax,
  novadax,
  oceanex,
  okcoin,
  okx,
  onetrading,
  oxfun,
  p2b,
  paradex,
  paymium,
  phemex,
  poloniex,
  probit,
  timex,
  tokocrypto,
  tradeogre,
  upbit,
  vertex,
  wavesexchange,
  whitebit,
  woo,
  woofipro,
  xt,
  yobit,
  zaif,
  zonda,
} from "ccxt";

export const getExchanges = async (symbol) => {
  const exchanges = [
    // alpaca,
    // apex,
    // ascendex,
    // bigone,
    binance,
    // bingx,
    // bit2c,
    // bitbank,
    // bitbns,
    // bitfinex,
    // bitflyer,
    // bitget,
    // bithumb,
    // bitmart,
    // bitmex,
    // bitopro,
    // bitrue,
    // bitso,
    // bitstamp,
    // bitteam,
    // bitvavo,
    // bl3p,
    // blockchaincom,
    // blofin,
    // btcalpha,
    // btcbox,
    // btcmarkets,
    // btcturk,
    // bybit,
    // cex,
    // coinbase,
    // coinbaseexchange,
    // coinbaseinternational,
    // coincatch,
    // coincheck,
    // coinex,
    // coinlist,
    // coinmate,
    // coinmetro,
    // coinone,
    // coinsph,
    // coinspot,
    // cryptocom,
    // cryptomus,
    // defx,
    // delta,
    // deribit,
    // derive,
    // digifinex,
    // ellipx,
    // exmo,
    // gate,
    // gemini,
    // hashkey,
    // hitbtc,
    // hollaex,
    // htx,
    // huobijp,
    // hyperliquid,
    // idex,
    // independentreserve,
    // indodax,
    // kraken,
    // krakenfutures,
    // kucoin,
    // kucoinfutures,
    // kuna,
    // latoken,
    // lbank,
    // luno,
    // mercado,
    // mexc,
    // ndax,
    // novadax,
    // oceanex,
    // okcoin,
    // okx,
    // onetrading,
    // oxfun,
    // p2b,
    // paradex,
    // paymium,
    // phemex,
    // poloniex,
    // probit,
    // timex,
    // tokocrypto,
    // tradeogre,
    // upbit,
    // vertex,
    // wavesexchange,
    // whitebit,
    // woo,
    // woofipro,
    // xt,
    // yobit,
    // zaif,
    // zonda,
  ];

  try {
    // const exchange = new ccxt.binance({ enableRateLimit: true });
    // const ticker = await exchange.fetch_ticker("XRP/USDT");
    // console.log(ticker);

    const tickerData = [];
    exchanges.forEach(async (exchangeClass) => {
      try {
        const exchange = new exchangeClass({ enableRateLimit: true });

        // console.log({ markets: exchange.markets, market: exchange.market });

        if (exchange.has["fetchTicker"]) {
          const ticker = await exchange.fetchTicker(symbol);

          tickerData.push({
            name: exchange.name,
            logo: exchange.urls.logo,
            symbol: ticker.symbol,
            price: ticker.last,
            volume24h: ticker.quoteVolume,
          });
        }
        // else {
        //   tickerData.push({
        //     name: exchange.name,
        //     logo: exchange.urls.logo,
        //     symbol: "-",
        //     price: "-",
        //     volume24h: "-",
        //   });
        // }
      } catch (error) {
        console.log(error);
      }
    });

    return {
      res: tickerData,
    };
  } catch (error) {
    console.log(error);
    return {
      message: "Network Error, Please Try Again",
      error: error,
    };
  }
};
